---
# this playbook uses ansible fact-gathering to collect the 
# MAC addresses that we need to run the deployment
# the output will be a local inventory file containing the MAC addresses
# that can be used by the deployment playbook.
#
# If this has run once successfully, you do not need
# to run it every time you deploy, because the MAC addresses
# will still be valid (unless the NIC has been replaced)
#
# the host and account running this playbook must have
# password-less ssh access to the deployer host, 
# and all masters and workers also,
# to collect facts needed for the playbook
#
# the inventory file will not be generated unless
# deployer host and all masters and workers are accessible
# This is deliberate so that once CoreOS is installed on 
# masters and workers, this playbook will not accidentally
# delete the MAC addresses!
#
# collect mac addresses from masters

- hosts: all
  remote_user: root
  gather_subset: network
  max_fail_percentage: 0
  any_errors_fatal: true
  tasks:

  # check that all hosts are online
  - name: check all hosts online
    fail:
      msg: "all hosts must be online and running RHEL8/Centos8"
    when: ansible_play_hosts != ansible_play_hosts_all
 
  # check that group_vars/all.yml variables are defined

  - name: check all.yml vars are defined
    fail:
      msg: "remember to define group_vars/all.yml vars, see all.yml.sample file"
    when: 
    - lab_name is not defined
    - ipmi_password is not defined
    - rhcos_url is not defined
    - openshift_release_url is not defined
    - ocp4_pull_secret is not defined

  # discover facts about machines in lab
  # allow user to override, but if variable not defined,
  # attempt to look up using metadata based on lab and machine type

  - name: pull common vars
    include_vars:
      file: common_vars.yml

  - name: include metadata
    include_vars:
      file: "{{ lab_metadata_file }}"

  - name: must be RHEL 8.*
    shell: "grep 'release 8' /etc/redhat-release"

  # FIXME: can the next 3 tasks be made into a subroutine?
 
  - name: extract per_lab_info from lab_infra
    set_fact:
      per_lab_info: "{{ item }}"
    when: item.name == lab_name
    with_items: "{{ lab_metadata }}"

  - name: extract machine info from per-host machine type
    set_fact:
      machine_info: "{{ item }}"
    when: item.machine_type == machine_type
    with_items: "{{ per_lab_info.machine_types }}"

  - name: extract deploy interface
    set_fact:
      deploy_intf: "{{ machine_info.provision_intf }}"

  - name: lookup mac address for deployment interface
    set_fact:
      deploy_mac: "{{ ansible_facts[deploy_intf]['macaddress'] }}"

  - name: extract 2nd high-speed interface
    set_fact:
      baremetal_intf: "{{ machine_info.baremetal_intf }}"
    when: machine_info.baremetal_intf is defined

  - name: extract 2nd high-speed interface mac address
    set_fact:
      baremetal_mac: "{{ ansible_facts[baremetal_intf]['macaddress'] }}"
    when: machine_info.baremetal_intf is defined

# the inventory_with_macs.yml will allow ocp4_upi_baremetal.yml to
# generate records needed by DHCP to assign IP addresses to MAC addresses

- hosts: deployer
  remote_user: root
  gather_facts: false
  gather_subset: network

  vars:
    # this var can be overridden
    new_inv: inventory_with_macs.yml
    post_install_inv: post_install_inventory.yml
    master_count: "{{ groups['masters'] | length }}"
    worker_count: "{{ groups['workers'] | length }}"

  tasks:

  - name: pull common vars
    include_vars:
      file: common_vars.yml

  - name: generate new inventory file with mac addresses
    template:
      src: inventory_with_macs.yml.j2
      dest: "{{ new_inv }}"

  - name: fetch inventory with macs to protect from deployer reinstall
    fetch:
      flat: yes
      src: "{{ new_inv }}"
      dest: "~/"


  # post-install inventory file allows playbooks
  # to access openshift nodes after they have joined the openshift cluster
  # mac addresses are no longer needed

  - name: generate post-install inventory file
    template: 
      src: post_install_inventory.yml.j2
      dest: "{{ post_install_inv }}"

  - name: fetch post install inventory file to protect from deployer reinstall
    fetch:
      flat: yes
      src: "{{ post_install_inv }}"
      dest: "~/"



